{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/ui/checkbox/checkbox.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './checkbox.css';\nconst defaultOpts = {\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Checkbox extends Widget {\n    constructor(opts) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        this._checked = this._opts.isChecked;\n        const classes = ['monaco-custom-checkbox'];\n        if (this._opts.icon) {\n            classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\n        }\n        if (this._opts.actionClassName) {\n            classes.push(...this._opts.actionClassName.split(' '));\n        }\n        if (this._checked) {\n            classes.push('checked');\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.title = this._opts.title;\n        this.domNode.classList.add(...classes);\n        if (!this._opts.notFocusable) {\n            this.domNode.tabIndex = 0;\n        }\n        this.domNode.setAttribute('role', 'checkbox');\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.setAttribute('aria-label', this._opts.title);\n        this.applyStyles();\n        this.onclick(this.domNode, (ev) => {\n            if (this.enabled) {\n                this.checked = !this._checked;\n                this._onChange.fire(false);\n                ev.preventDefault();\n            }\n        });\n        this.ignoreGesture(this.domNode);\n        this.onkeydown(this.domNode, (keyboardEvent) => {\n            if (keyboardEvent.keyCode === 10 /* Space */ || keyboardEvent.keyCode === 3 /* Enter */) {\n                this.checked = !this._checked;\n                this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                return;\n            }\n            this._onKeyDown.fire(keyboardEvent);\n        });\n    }\n    get enabled() {\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\n    }\n    focus() {\n        this.domNode.focus();\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(newIsChecked) {\n        this._checked = newIsChecked;\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.classList.toggle('checked', this._checked);\n        this.applyStyles();\n    }\n    width() {\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    }\n    style(styles) {\n        if (styles.inputActiveOptionBorder) {\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        }\n        if (styles.inputActiveOptionForeground) {\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        }\n        if (styles.inputActiveOptionBackground) {\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        }\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n        }\n    }\n    enable() {\n        this.domNode.setAttribute('aria-disabled', String(false));\n    }\n    disable() {\n        this.domNode.setAttribute('aria-disabled', String(true));\n    }\n}\n",
      "start": 1711096856677,
      "end": 1711096856772,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856772,
      "end": 1711096856772,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856772,
      "end": 1711096856773,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856773,
      "end": 1711096856773,
      "order": "normal"
    }
  ]
}
