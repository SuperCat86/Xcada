{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/transpose.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand.js';\nimport { MoveOperations } from '../../../common/cursor/cursorMoveOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass TransposeLettersAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transposeLetters',\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n            alias: 'Transpose Letters',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: {\n                    primary: 256 /* WinCtrl */ | 50 /* KeyT */\n                },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let model = editor.getModel();\n        let commands = [];\n        let selections = editor.getSelections();\n        for (let selection of selections) {\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            let lineNumber = selection.startLineNumber;\n            let column = selection.startColumn;\n            let lastColumn = model.getLineMaxColumn(lineNumber);\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\n                // at beginning of file, nothing to do\n                continue;\n            }\n            // handle special case: when at end of line, transpose left two chars\n            // otherwise, transpose left and right chars\n            let endPosition = (column === lastColumn) ?\n                selection.getPosition() :\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n            let middlePosition = MoveOperations.leftPosition(model, endPosition);\n            let beginPosition = MoveOperations.leftPosition(model, middlePosition);\n            let leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n            let rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n            let replaceRange = Range.fromPositions(beginPosition, endPosition);\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n        }\n        if (commands.length > 0) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, commands);\n            editor.pushUndoStop();\n        }\n    }\n}\nregisterEditorAction(TransposeLettersAction);\n",
      "start": 1711096854392,
      "end": 1711096854495,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854496,
      "end": 1711096854496,
      "order": "normal"
    }
  ]
}
