{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToSymbol.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nfunction getLocationLinks(model, position, registry, provide) {\n    const provider = registry.ordered(model);\n    // get results\n    const promises = provider.map((provider) => {\n        return Promise.resolve(provide(provider, model, position)).then(undefined, err => {\n            onUnexpectedExternalError(err);\n            return undefined;\n        });\n    });\n    return Promise.all(promises).then(values => {\n        const result = [];\n        for (let value of values) {\n            if (Array.isArray(value)) {\n                result.push(...value);\n            }\n            else if (value) {\n                result.push(value);\n            }\n        }\n        return result;\n    });\n}\nexport function getDefinitionsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideDefinition(model, position, token);\n    });\n}\nexport function getDeclarationsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideDeclaration(model, position, token);\n    });\n}\nexport function getImplementationsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideImplementation(model, position, token);\n    });\n}\nexport function getTypeDefinitionsAtPosition(registry, model, position, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => {\n        return provider.provideTypeDefinition(model, position, token);\n    });\n}\nexport function getReferencesAtPosition(registry, model, position, compact, token) {\n    return getLocationLinks(model, position, registry, (provider, model, position) => __awaiter(this, void 0, void 0, function* () {\n        const result = yield provider.provideReferences(model, position, { includeDeclaration: true }, token);\n        if (!compact || !result || result.length !== 2) {\n            return result;\n        }\n        const resultWithoutDeclaration = yield provider.provideReferences(model, position, { includeDeclaration: false }, token);\n        if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\n            return resultWithoutDeclaration;\n        }\n        return result;\n    }));\n}\n// -- API commands ----\nfunction _sortedAndDeduped(callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const rawLinks = yield callback();\n        const model = new ReferencesModel(rawLinks, '');\n        const modelLinks = model.references.map(ref => ref.link);\n        model.dispose();\n        return modelLinks;\n    });\n}\nregisterModelAndPositionCommand('_executeDefinitionProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeDeclarationProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeReferenceProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\nregisterModelAndPositionCommand('_executeImplementationProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const promise = getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, CancellationToken.None);\n    return _sortedAndDeduped(() => promise);\n});\n",
      "start": 1711096855739,
      "end": 1711096855842,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855842,
      "end": 1711096855842,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855843,
      "end": 1711096855843,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855843,
      "end": 1711096855844,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855844,
      "end": 1711096855844,
      "order": "normal"
    }
  ]
}
