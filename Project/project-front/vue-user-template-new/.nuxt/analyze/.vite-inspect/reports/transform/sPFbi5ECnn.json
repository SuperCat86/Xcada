{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorPickerModel.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nexport class ColorPickerModel {\n    constructor(color, availableColorPresentations, presentationIndex) {\n        this.presentationIndex = presentationIndex;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        this._onDidChangeColor = new Emitter();\n        this.onDidChangeColor = this._onDidChangeColor.event;\n        this._onDidChangePresentation = new Emitter();\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\n        this.originalColor = color;\n        this._color = color;\n        this._colorPresentations = availableColorPresentations;\n    }\n    get color() {\n        return this._color;\n    }\n    set color(color) {\n        if (this._color.equals(color)) {\n            return;\n        }\n        this._color = color;\n        this._onDidChangeColor.fire(color);\n    }\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\n    get colorPresentations() {\n        return this._colorPresentations;\n    }\n    set colorPresentations(colorPresentations) {\n        this._colorPresentations = colorPresentations;\n        if (this.presentationIndex > colorPresentations.length - 1) {\n            this.presentationIndex = 0;\n        }\n        this._onDidChangePresentation.fire(this.presentation);\n    }\n    selectNextColorPresentation() {\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\n        this.flushColor();\n        this._onDidChangePresentation.fire(this.presentation);\n    }\n    guessColorPresentation(color, originalText) {\n        for (let i = 0; i < this.colorPresentations.length; i++) {\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\n                this.presentationIndex = i;\n                this._onDidChangePresentation.fire(this.presentation);\n                break;\n            }\n        }\n    }\n    flushColor() {\n        this._onColorFlushed.fire(this._color);\n    }\n}\n",
      "start": 1711096856621,
      "end": 1711096856704,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856704,
      "end": 1711096856704,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856705,
      "end": 1711096856705,
      "order": "normal"
    }
  ]
}
