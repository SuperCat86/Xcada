{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/ui/hover/hoverWidget.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport './hover.css';\nconst $ = dom.$;\nexport class HoverWidget extends Disposable {\n    constructor() {\n        super();\n        this.containerDomNode = document.createElement('div');\n        this.containerDomNode.className = 'monaco-hover';\n        this.containerDomNode.tabIndex = 0;\n        this.containerDomNode.setAttribute('role', 'tooltip');\n        this.contentsDomNode = document.createElement('div');\n        this.contentsDomNode.className = 'monaco-hover-content';\n        this.scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\n            consumeMouseWheelIfScrollbarIsNeeded: true\n        }));\n        this.containerDomNode.appendChild(this.scrollbar.getDomNode());\n    }\n    onContentsChanged() {\n        this.scrollbar.scanDomNode();\n    }\n}\nexport class HoverAction extends Disposable {\n    constructor(parent, actionOptions, keybindingLabel) {\n        super();\n        this.actionContainer = dom.append(parent, $('div.action-container'));\n        this.actionContainer.setAttribute('tabindex', '0');\n        this.action = dom.append(this.actionContainer, $('a.action'));\n        this.action.setAttribute('role', 'button');\n        if (actionOptions.iconClass) {\n            dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\n        }\n        const label = dom.append(this.action, $('span'));\n        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.CLICK, e => {\n            e.stopPropagation();\n            e.preventDefault();\n            actionOptions.run(this.actionContainer);\n        }));\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.KEY_UP, e => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(3 /* Enter */)) {\n                e.stopPropagation();\n                e.preventDefault();\n                actionOptions.run(this.actionContainer);\n            }\n        }));\n        this.setEnabled(true);\n    }\n    static render(parent, actionOptions, keybindingLabel) {\n        return new HoverAction(parent, actionOptions, keybindingLabel);\n    }\n    setEnabled(enabled) {\n        if (enabled) {\n            this.actionContainer.classList.remove('disabled');\n            this.actionContainer.removeAttribute('aria-disabled');\n        }\n        else {\n            this.actionContainer.classList.add('disabled');\n            this.actionContainer.setAttribute('aria-disabled', 'true');\n        }\n    }\n}\n",
      "start": 1711096856771,
      "end": 1711096856877,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856877,
      "end": 1711096856877,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856877,
      "end": 1711096856878,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856878,
      "end": 1711096856878,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856879,
      "end": 1711096856879,
      "order": "normal"
    }
  ]
}
