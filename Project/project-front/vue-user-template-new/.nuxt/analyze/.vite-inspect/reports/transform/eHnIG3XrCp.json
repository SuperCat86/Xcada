{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport class ScrollbarVisibilityController extends Disposable {\n    constructor(visibility, visibleClassName, invisibleClassName) {\n        super();\n        this._visibility = visibility;\n        this._visibleClassName = visibleClassName;\n        this._invisibleClassName = invisibleClassName;\n        this._domNode = null;\n        this._isVisible = false;\n        this._isNeeded = false;\n        this._rawShouldBeVisible = false;\n        this._shouldBeVisible = false;\n        this._revealTimer = this._register(new TimeoutTimer());\n    }\n    setVisibility(visibility) {\n        if (this._visibility !== visibility) {\n            this._visibility = visibility;\n            this._updateShouldBeVisible();\n        }\n    }\n    // ----------------- Hide / Reveal\n    setShouldBeVisible(rawShouldBeVisible) {\n        this._rawShouldBeVisible = rawShouldBeVisible;\n        this._updateShouldBeVisible();\n    }\n    _applyVisibilitySetting() {\n        if (this._visibility === 2 /* Hidden */) {\n            return false;\n        }\n        if (this._visibility === 3 /* Visible */) {\n            return true;\n        }\n        return this._rawShouldBeVisible;\n    }\n    _updateShouldBeVisible() {\n        const shouldBeVisible = this._applyVisibilitySetting();\n        if (this._shouldBeVisible !== shouldBeVisible) {\n            this._shouldBeVisible = shouldBeVisible;\n            this.ensureVisibility();\n        }\n    }\n    setIsNeeded(isNeeded) {\n        if (this._isNeeded !== isNeeded) {\n            this._isNeeded = isNeeded;\n            this.ensureVisibility();\n        }\n    }\n    setDomNode(domNode) {\n        this._domNode = domNode;\n        this._domNode.setClassName(this._invisibleClassName);\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n        this.setShouldBeVisible(false);\n    }\n    ensureVisibility() {\n        if (!this._isNeeded) {\n            // Nothing to be rendered\n            this._hide(false);\n            return;\n        }\n        if (this._shouldBeVisible) {\n            this._reveal();\n        }\n        else {\n            this._hide(true);\n        }\n    }\n    _reveal() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        // The CSS animation doesn't play otherwise\n        this._revealTimer.setIfNotSet(() => {\n            if (this._domNode) {\n                this._domNode.setClassName(this._visibleClassName);\n            }\n        }, 0);\n    }\n    _hide(withFadeAway) {\n        this._revealTimer.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        if (this._domNode) {\n            this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n        }\n    }\n}\n",
      "start": 1711096857729,
      "end": 1711096857858,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857858,
      "end": 1711096857858,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857858,
      "end": 1711096857858,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857858,
      "end": 1711096857858,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857858,
      "end": 1711096857858,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857859,
      "end": 1711096857859,
      "order": "normal"
    }
  ]
}
