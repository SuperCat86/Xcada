{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition());\n    }\n}\nexport class ReplaceCommandThatSelectsText {\n    constructor(range, text) {\n        this._range = range;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromRange(srcRange, 0 /* LTR */);\n    }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getStartPosition());\n    }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this._columnDeltaOffset = columnDeltaOffset;\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n    }\n}\nexport class ReplaceCommandThatPreservesSelection {\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\n        this._range = editRange;\n        this._text = text;\n        this._initialSelection = initialSelection;\n        this._forceMoveMarkers = forceMoveMarkers;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n        this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n",
      "start": 1711096855509,
      "end": 1711096855620,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855620,
      "end": 1711096855620,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855620,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855621,
      "end": 1711096855621,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855621,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855622,
      "end": 1711096855622,
      "order": "normal"
    }
  ]
}
