{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../editor/editor.api.js\";\n\n// src/basic-languages/_.contribution.ts\nvar languageDefinitions = {};\nvar lazyLanguageLoaders = {};\nvar LazyLanguageLoader = class {\n  static getOrCreate(languageId) {\n    if (!lazyLanguageLoaders[languageId]) {\n      lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\n    }\n    return lazyLanguageLoaders[languageId];\n  }\n  _languageId;\n  _loadingTriggered;\n  _lazyLoadPromise;\n  _lazyLoadPromiseResolve;\n  _lazyLoadPromiseReject;\n  constructor(languageId) {\n    this._languageId = languageId;\n    this._loadingTriggered = false;\n    this._lazyLoadPromise = new Promise((resolve, reject) => {\n      this._lazyLoadPromiseResolve = resolve;\n      this._lazyLoadPromiseReject = reject;\n    });\n  }\n  load() {\n    if (!this._loadingTriggered) {\n      this._loadingTriggered = true;\n      languageDefinitions[this._languageId].loader().then((mod) => this._lazyLoadPromiseResolve(mod), (err) => this._lazyLoadPromiseReject(err));\n    }\n    return this._lazyLoadPromise;\n  }\n};\nasync function loadLanguage(languageId) {\n  await LazyLanguageLoader.getOrCreate(languageId).load();\n  const model = monaco_editor_core_exports.editor.createModel(\"\", languageId);\n  model.dispose();\n}\nfunction registerLanguage(def) {\n  const languageId = def.id;\n  languageDefinitions[languageId] = def;\n  monaco_editor_core_exports.languages.register(def);\n  const lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\n  monaco_editor_core_exports.languages.registerTokensProviderFactory(languageId, {\n    create: async () => {\n      const mod = await lazyLanguageLoader.load();\n      return mod.language;\n    }\n  });\n  monaco_editor_core_exports.languages.onLanguage(languageId, async () => {\n    const mod = await lazyLanguageLoader.load();\n    monaco_editor_core_exports.languages.setLanguageConfiguration(languageId, mod.conf);\n  });\n}\nexport {\n  loadLanguage,\n  registerLanguage\n};\n",
      "start": 1711096854012,
      "end": 1711096854232,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854232,
      "end": 1711096854232,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854232,
      "end": 1711096854233,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854233,
      "end": 1711096854233,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854234,
      "end": 1711096854234,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854234,
      "end": 1711096854234,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854234,
      "end": 1711096854234,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854234,
      "end": 1711096854234,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854234,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854235,
      "end": 1711096854235,
      "order": "normal"
    }
  ]
}
