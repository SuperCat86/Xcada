{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/browser/services/webWorker.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorWorkerClient } from './editorWorkerService.js';\nimport * as types from '../../../base/common/types.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? types.getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n",
      "start": 1711096855066,
      "end": 1711096855143,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855144,
      "end": 1711096855144,
      "order": "normal"
    }
  ]
}
