{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n",
      "start": 1711096855423,
      "end": 1711096855576,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855577,
      "end": 1711096855577,
      "order": "normal"
    }
  ]
}
