{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.colorizedBracketPairs) {\n            this._colorizedBracketPairs = filterValidBrackets(config.colorizedBracketPairs.map(b => [b[0], b[1]]));\n        }\n        else if (config.brackets) {\n            this._colorizedBracketPairs = filterValidBrackets(config.brackets\n                .map((b) => [b[0], b[1]])\n                // Many languages set < ... > as bracket pair, even though they also use it as comparison operator.\n                // This leads to problems when colorizing this bracket, so we exclude it by default.\n                // Languages can still override this by configuring `colorizedBracketPairs`\n                // https://github.com/microsoft/vscode/issues/132476\n                .filter((p) => !(p[0] === '<' && p[1] === '>')));\n        }\n        else {\n            this._colorizedBracketPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBefore = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet() {\n        return this._autoCloseBefore;\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n    getColorizedBrackets() {\n        return this._colorizedBracketPairs;\n    }\n}\nCharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED = ';:.,=}])> \\n\\t';\nfunction filterValidBrackets(bracketPairs) {\n    return bracketPairs.filter(([open, close]) => open !== '' && close !== '');\n}\n",
      "start": 1711096856181,
      "end": 1711096856269,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856269,
      "end": 1711096856269,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    }
  ]
}
