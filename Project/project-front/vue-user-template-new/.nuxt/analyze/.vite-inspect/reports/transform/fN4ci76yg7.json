{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/fastDomNode.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class FastDomNode {\n    constructor(domNode) {\n        this.domNode = domNode;\n        this._maxWidth = -1;\n        this._width = -1;\n        this._height = -1;\n        this._top = -1;\n        this._left = -1;\n        this._bottom = -1;\n        this._right = -1;\n        this._fontFamily = '';\n        this._fontWeight = '';\n        this._fontSize = -1;\n        this._fontStyle = '';\n        this._fontFeatureSettings = '';\n        this._textDecoration = '';\n        this._lineHeight = -1;\n        this._letterSpacing = -100;\n        this._className = '';\n        this._display = '';\n        this._position = '';\n        this._visibility = '';\n        this._color = '';\n        this._backgroundColor = '';\n        this._layerHint = false;\n        this._contain = 'none';\n        this._boxShadow = '';\n    }\n    setMaxWidth(maxWidth) {\n        if (this._maxWidth === maxWidth) {\n            return;\n        }\n        this._maxWidth = maxWidth;\n        this.domNode.style.maxWidth = this._maxWidth + 'px';\n    }\n    setWidth(width) {\n        if (this._width === width) {\n            return;\n        }\n        this._width = width;\n        this.domNode.style.width = this._width + 'px';\n    }\n    setHeight(height) {\n        if (this._height === height) {\n            return;\n        }\n        this._height = height;\n        this.domNode.style.height = this._height + 'px';\n    }\n    setTop(top) {\n        if (this._top === top) {\n            return;\n        }\n        this._top = top;\n        this.domNode.style.top = this._top + 'px';\n    }\n    unsetTop() {\n        if (this._top === -1) {\n            return;\n        }\n        this._top = -1;\n        this.domNode.style.top = '';\n    }\n    setLeft(left) {\n        if (this._left === left) {\n            return;\n        }\n        this._left = left;\n        this.domNode.style.left = this._left + 'px';\n    }\n    setBottom(bottom) {\n        if (this._bottom === bottom) {\n            return;\n        }\n        this._bottom = bottom;\n        this.domNode.style.bottom = this._bottom + 'px';\n    }\n    setRight(right) {\n        if (this._right === right) {\n            return;\n        }\n        this._right = right;\n        this.domNode.style.right = this._right + 'px';\n    }\n    setFontFamily(fontFamily) {\n        if (this._fontFamily === fontFamily) {\n            return;\n        }\n        this._fontFamily = fontFamily;\n        this.domNode.style.fontFamily = this._fontFamily;\n    }\n    setFontWeight(fontWeight) {\n        if (this._fontWeight === fontWeight) {\n            return;\n        }\n        this._fontWeight = fontWeight;\n        this.domNode.style.fontWeight = this._fontWeight;\n    }\n    setFontSize(fontSize) {\n        if (this._fontSize === fontSize) {\n            return;\n        }\n        this._fontSize = fontSize;\n        this.domNode.style.fontSize = this._fontSize + 'px';\n    }\n    setFontStyle(fontStyle) {\n        if (this._fontStyle === fontStyle) {\n            return;\n        }\n        this._fontStyle = fontStyle;\n        this.domNode.style.fontStyle = this._fontStyle;\n    }\n    setFontFeatureSettings(fontFeatureSettings) {\n        if (this._fontFeatureSettings === fontFeatureSettings) {\n            return;\n        }\n        this._fontFeatureSettings = fontFeatureSettings;\n        this.domNode.style.fontFeatureSettings = this._fontFeatureSettings;\n    }\n    setTextDecoration(textDecoration) {\n        if (this._textDecoration === textDecoration) {\n            return;\n        }\n        this._textDecoration = textDecoration;\n        this.domNode.style.textDecoration = this._textDecoration;\n    }\n    setLineHeight(lineHeight) {\n        if (this._lineHeight === lineHeight) {\n            return;\n        }\n        this._lineHeight = lineHeight;\n        this.domNode.style.lineHeight = this._lineHeight + 'px';\n    }\n    setLetterSpacing(letterSpacing) {\n        if (this._letterSpacing === letterSpacing) {\n            return;\n        }\n        this._letterSpacing = letterSpacing;\n        this.domNode.style.letterSpacing = this._letterSpacing + 'px';\n    }\n    setClassName(className) {\n        if (this._className === className) {\n            return;\n        }\n        this._className = className;\n        this.domNode.className = this._className;\n    }\n    toggleClassName(className, shouldHaveIt) {\n        this.domNode.classList.toggle(className, shouldHaveIt);\n        this._className = this.domNode.className;\n    }\n    setDisplay(display) {\n        if (this._display === display) {\n            return;\n        }\n        this._display = display;\n        this.domNode.style.display = this._display;\n    }\n    setPosition(position) {\n        if (this._position === position) {\n            return;\n        }\n        this._position = position;\n        this.domNode.style.position = this._position;\n    }\n    setVisibility(visibility) {\n        if (this._visibility === visibility) {\n            return;\n        }\n        this._visibility = visibility;\n        this.domNode.style.visibility = this._visibility;\n    }\n    setColor(color) {\n        if (this._color === color) {\n            return;\n        }\n        this._color = color;\n        this.domNode.style.color = this._color;\n    }\n    setBackgroundColor(backgroundColor) {\n        if (this._backgroundColor === backgroundColor) {\n            return;\n        }\n        this._backgroundColor = backgroundColor;\n        this.domNode.style.backgroundColor = this._backgroundColor;\n    }\n    setLayerHinting(layerHint) {\n        if (this._layerHint === layerHint) {\n            return;\n        }\n        this._layerHint = layerHint;\n        this.domNode.style.transform = this._layerHint ? 'translate3d(0px, 0px, 0px)' : '';\n    }\n    setBoxShadow(boxShadow) {\n        if (this._boxShadow === boxShadow) {\n            return;\n        }\n        this._boxShadow = boxShadow;\n        this.domNode.style.boxShadow = boxShadow;\n    }\n    setContain(contain) {\n        if (this._contain === contain) {\n            return;\n        }\n        this._contain = contain;\n        this.domNode.style.contain = this._contain;\n    }\n    setAttribute(name, value) {\n        this.domNode.setAttribute(name, value);\n    }\n    removeAttribute(name) {\n        this.domNode.removeAttribute(name);\n    }\n    appendChild(child) {\n        this.domNode.appendChild(child.domNode);\n    }\n    removeChild(child) {\n        this.domNode.removeChild(child.domNode);\n    }\n}\nexport function createFastDomNode(domNode) {\n    return new FastDomNode(domNode);\n}\n",
      "start": 1711096854644,
      "end": 1711096854848,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854848,
      "end": 1711096854848,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854848,
      "end": 1711096854849,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854849,
      "end": 1711096854849,
      "order": "normal"
    }
  ]
}
