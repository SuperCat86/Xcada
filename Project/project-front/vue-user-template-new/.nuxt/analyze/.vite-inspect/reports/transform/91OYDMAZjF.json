{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEach } from '../../../base/common/collections.js';\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    const wordWrap = options.wordWrap;\n    if (wordWrap === true) {\n        options.wordWrap = 'on';\n    }\n    else if (wordWrap === false) {\n        options.wordWrap = 'off';\n    }\n    const lineNumbers = options.lineNumbers;\n    if (lineNumbers === true) {\n        options.lineNumbers = 'on';\n    }\n    else if (lineNumbers === false) {\n        options.lineNumbers = 'off';\n    }\n    const autoClosingBrackets = options.autoClosingBrackets;\n    if (autoClosingBrackets === false) {\n        options.autoClosingBrackets = 'never';\n        options.autoClosingQuotes = 'never';\n        options.autoSurround = 'never';\n    }\n    const cursorBlinking = options.cursorBlinking;\n    if (cursorBlinking === 'visible') {\n        options.cursorBlinking = 'solid';\n    }\n    const renderWhitespace = options.renderWhitespace;\n    if (renderWhitespace === true) {\n        options.renderWhitespace = 'boundary';\n    }\n    else if (renderWhitespace === false) {\n        options.renderWhitespace = 'none';\n    }\n    const renderLineHighlight = options.renderLineHighlight;\n    if (renderLineHighlight === true) {\n        options.renderLineHighlight = 'line';\n    }\n    else if (renderLineHighlight === false) {\n        options.renderLineHighlight = 'none';\n    }\n    const acceptSuggestionOnEnter = options.acceptSuggestionOnEnter;\n    if (acceptSuggestionOnEnter === true) {\n        options.acceptSuggestionOnEnter = 'on';\n    }\n    else if (acceptSuggestionOnEnter === false) {\n        options.acceptSuggestionOnEnter = 'off';\n    }\n    const tabCompletion = options.tabCompletion;\n    if (tabCompletion === false) {\n        options.tabCompletion = 'off';\n    }\n    else if (tabCompletion === true) {\n        options.tabCompletion = 'onlySnippets';\n    }\n    const suggest = options.suggest;\n    if (suggest && typeof suggest.filteredTypes === 'object' && suggest.filteredTypes) {\n        const mapping = {};\n        mapping['method'] = 'showMethods';\n        mapping['function'] = 'showFunctions';\n        mapping['constructor'] = 'showConstructors';\n        mapping['deprecated'] = 'showDeprecated';\n        mapping['field'] = 'showFields';\n        mapping['variable'] = 'showVariables';\n        mapping['class'] = 'showClasses';\n        mapping['struct'] = 'showStructs';\n        mapping['interface'] = 'showInterfaces';\n        mapping['module'] = 'showModules';\n        mapping['property'] = 'showProperties';\n        mapping['event'] = 'showEvents';\n        mapping['operator'] = 'showOperators';\n        mapping['unit'] = 'showUnits';\n        mapping['value'] = 'showValues';\n        mapping['constant'] = 'showConstants';\n        mapping['enum'] = 'showEnums';\n        mapping['enumMember'] = 'showEnumMembers';\n        mapping['keyword'] = 'showKeywords';\n        mapping['text'] = 'showWords';\n        mapping['color'] = 'showColors';\n        mapping['file'] = 'showFiles';\n        mapping['reference'] = 'showReferences';\n        mapping['folder'] = 'showFolders';\n        mapping['typeParameter'] = 'showTypeParameters';\n        mapping['snippet'] = 'showSnippets';\n        forEach(mapping, entry => {\n            const value = suggest.filteredTypes[entry.key];\n            if (value === false) {\n                suggest[entry.value] = value;\n            }\n        });\n        // delete (<any>suggest).filteredTypes;\n    }\n    const hover = options.hover;\n    if (hover === true) {\n        options.hover = {\n            enabled: true\n        };\n    }\n    else if (hover === false) {\n        options.hover = {\n            enabled: false\n        };\n    }\n    const parameterHints = options.parameterHints;\n    if (parameterHints === true) {\n        options.parameterHints = {\n            enabled: true\n        };\n    }\n    else if (parameterHints === false) {\n        options.parameterHints = {\n            enabled: false\n        };\n    }\n    const autoIndent = options.autoIndent;\n    if (autoIndent === true) {\n        options.autoIndent = 'full';\n    }\n    else if (autoIndent === false) {\n        options.autoIndent = 'advanced';\n    }\n    const matchBrackets = options.matchBrackets;\n    if (matchBrackets === true) {\n        options.matchBrackets = 'always';\n    }\n    else if (matchBrackets === false) {\n        options.matchBrackets = 'never';\n    }\n    const { renderIndentGuides, highlightActiveIndentGuide } = options;\n    if (!options.guides) {\n        options.guides = {};\n    }\n    if (renderIndentGuides !== undefined) {\n        options.guides.indentation = !!renderIndentGuides;\n    }\n    if (highlightActiveIndentGuide !== undefined) {\n        options.guides.highlightActiveIndentation = !!highlightActiveIndentGuide;\n    }\n}\n",
      "start": 1711096856341,
      "end": 1711096856413,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856414,
      "end": 1711096856414,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856414,
      "end": 1711096856415,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856415,
      "end": 1711096856415,
      "order": "normal"
    }
  ]
}
