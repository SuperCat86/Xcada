{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as GestureEventType, Gesture } from '../../touch.js';\nimport { ActionRunner } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport './dropdown.css';\nexport class BaseDropdown extends ActionRunner {\n    constructor(container, options) {\n        super();\n        this._onDidChangeVisibility = this._register(new Emitter());\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\n        this._element = append(container, $('.monaco-dropdown'));\n        this._label = append(this._element, $('.dropdown-label'));\n        let labelRenderer = options.labelRenderer;\n        if (!labelRenderer) {\n            labelRenderer = (container) => {\n                container.textContent = options.label || '';\n                return null;\n            };\n        }\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\n        }\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n            this._register(addDisposableListener(this._label, event, e => {\n                if (e instanceof MouseEvent && e.detail > 1) {\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\n                }\n                if (this.visible) {\n                    this.hide();\n                }\n                else {\n                    this.show();\n                }\n            }));\n        }\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\n                if (this.visible) {\n                    this.hide();\n                }\n                else {\n                    this.show();\n                }\n            }\n        }));\n        const cleanupFn = labelRenderer(this._label);\n        if (cleanupFn) {\n            this._register(cleanupFn);\n        }\n        this._register(Gesture.addTarget(this._label));\n    }\n    get element() {\n        return this._element;\n    }\n    show() {\n        if (!this.visible) {\n            this.visible = true;\n            this._onDidChangeVisibility.fire(true);\n        }\n    }\n    hide() {\n        if (this.visible) {\n            this.visible = false;\n            this._onDidChangeVisibility.fire(false);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.hide();\n        if (this.boxContainer) {\n            this.boxContainer.remove();\n            this.boxContainer = undefined;\n        }\n        if (this.contents) {\n            this.contents.remove();\n            this.contents = undefined;\n        }\n        if (this._label) {\n            this._label.remove();\n            this._label = undefined;\n        }\n    }\n}\nexport class DropdownMenu extends BaseDropdown {\n    constructor(container, options) {\n        super(container, options);\n        this._actions = [];\n        this._contextMenuProvider = options.contextMenuProvider;\n        this.actions = options.actions || [];\n        this.actionProvider = options.actionProvider;\n        this.menuClassName = options.menuClassName || '';\n        this.menuAsChild = !!options.menuAsChild;\n    }\n    set menuOptions(options) {\n        this._menuOptions = options;\n    }\n    get menuOptions() {\n        return this._menuOptions;\n    }\n    get actions() {\n        if (this.actionProvider) {\n            return this.actionProvider.getActions();\n        }\n        return this._actions;\n    }\n    set actions(actions) {\n        this._actions = actions;\n    }\n    show() {\n        super.show();\n        this.element.classList.add('active');\n        this._contextMenuProvider.showContextMenu({\n            getAnchor: () => this.element,\n            getActions: () => this.actions,\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\n            getMenuClassName: () => this.menuClassName,\n            onHide: () => this.onHide(),\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\n        });\n    }\n    hide() {\n        super.hide();\n    }\n    onHide() {\n        this.hide();\n        this.element.classList.remove('active');\n    }\n}\n",
      "start": 1711096857675,
      "end": 1711096857779,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857779,
      "end": 1711096857779,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857779,
      "end": 1711096857780,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857780,
      "end": 1711096857780,
      "order": "normal"
    }
  ]
}
