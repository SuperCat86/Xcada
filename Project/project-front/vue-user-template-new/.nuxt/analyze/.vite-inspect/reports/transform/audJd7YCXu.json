{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n",
      "start": 1711096857555,
      "end": 1711096857658,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857658,
      "end": 1711096857658,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857659,
      "end": 1711096857659,
      "order": "normal"
    }
  ]
}
