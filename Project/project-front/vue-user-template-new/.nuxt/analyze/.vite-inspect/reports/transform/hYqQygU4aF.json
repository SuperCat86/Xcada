{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\n",
      "start": 1711096855150,
      "end": 1711096855290,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855290,
      "end": 1711096855290,
      "order": "normal"
    }
  ]
}
