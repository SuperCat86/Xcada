{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/format/browser/formattingEdit.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class FormattingEdit {\n    static _handleEolEdits(editor, edits) {\n        let newEol = undefined;\n        let singleEdits = [];\n        for (let edit of edits) {\n            if (typeof edit.eol === 'number') {\n                newEol = edit.eol;\n            }\n            if (edit.range && typeof edit.text === 'string') {\n                singleEdits.push(edit);\n            }\n        }\n        if (typeof newEol === 'number') {\n            if (editor.hasModel()) {\n                editor.getModel().pushEOL(newEol);\n            }\n        }\n        return singleEdits;\n    }\n    static _isFullModelReplaceEdit(editor, edit) {\n        if (!editor.hasModel()) {\n            return false;\n        }\n        const model = editor.getModel();\n        const editRange = model.validateRange(edit.range);\n        const fullModelRange = model.getFullModelRange();\n        return fullModelRange.equalsRange(editRange);\n    }\n    static execute(editor, _edits, addUndoStops) {\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n        const edits = FormattingEdit._handleEolEdits(editor, _edits);\n        if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n            // We use replace semantics and hope that markers stay put...\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n        }\n        else {\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n        }\n        if (addUndoStops) {\n            editor.pushUndoStop();\n        }\n    }\n}\n",
      "start": 1711096855144,
      "end": 1711096855288,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855288,
      "end": 1711096855288,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855288,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855289,
      "end": 1711096855289,
      "order": "normal"
    }
  ]
}
