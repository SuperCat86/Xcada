{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nfunction applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(106 /* suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n",
      "start": 1711096857656,
      "end": 1711096857727,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857727,
      "end": 1711096857727,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857727,
      "end": 1711096857728,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857728,
      "end": 1711096857728,
      "order": "normal"
    }
  ]
}
