{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/core/position.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n",
      "start": 1711096855090,
      "end": 1711096855226,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855226,
      "end": 1711096855226,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855226,
      "end": 1711096855227,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855227,
      "end": 1711096855227,
      "order": "normal"
    }
  ]
}
