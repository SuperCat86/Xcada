{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/model.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        this.indentSize = src.tabSize | 0;\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n",
      "start": 1711096855063,
      "end": 1711096855138,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096855138,
      "end": 1711096855138,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096855138,
      "end": 1711096855139,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096855139,
      "end": 1711096855139,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096855139,
      "end": 1711096855140,
      "order": "normal"
    }
  ]
}
