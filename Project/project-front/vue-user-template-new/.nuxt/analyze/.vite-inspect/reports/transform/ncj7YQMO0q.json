{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { editorRuler } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(91 /* rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(44 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(91 /* rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(44 /* fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const rulerColor = theme.getColor(editorRuler);\n    if (rulerColor) {\n        collector.addRule(`.monaco-editor .view-ruler { box-shadow: 1px 0 0 0 ${rulerColor} inset; }`);\n    }\n});\n",
      "start": 1711096856415,
      "end": 1711096856504,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856504,
      "end": 1711096856504,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856505,
      "end": 1711096856505,
      "order": "normal"
    }
  ]
}
