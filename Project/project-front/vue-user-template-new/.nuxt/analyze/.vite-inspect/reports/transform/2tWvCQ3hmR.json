{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionUi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CodeActionUi_disposed;\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { CodeActionMenu } from './codeActionMenu.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nlet CodeActionUi = class CodeActionUi extends Disposable {\n    constructor(_editor, quickFixActionId, preferredFixActionId, delegate, instantiationService) {\n        super();\n        this._editor = _editor;\n        this.delegate = delegate;\n        this._activeCodeActions = this._register(new MutableDisposable());\n        _CodeActionUi_disposed.set(this, false);\n        this._codeActionWidget = new Lazy(() => {\n            return this._register(instantiationService.createInstance(CodeActionMenu, this._editor, {\n                onSelectCodeAction: (action) => __awaiter(this, void 0, void 0, function* () {\n                    this.delegate.applyCodeAction(action, /* retrigger */ true);\n                })\n            }));\n        });\n        this._lightBulbWidget = new Lazy(() => {\n            const widget = this._register(instantiationService.createInstance(LightBulbWidget, this._editor, quickFixActionId, preferredFixActionId));\n            this._register(widget.onClick(e => this.showCodeActionList(e.trigger, e.actions, e, { includeDisabledActions: false })));\n            return widget;\n        });\n    }\n    dispose() {\n        __classPrivateFieldSet(this, _CodeActionUi_disposed, true, \"f\");\n        super.dispose();\n    }\n    update(newState) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (newState.type !== 1 /* Triggered */) {\n                (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 ? void 0 : _a.hide();\n                return;\n            }\n            let actions;\n            try {\n                actions = yield newState.actions;\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                return;\n            }\n            if (__classPrivateFieldGet(this, _CodeActionUi_disposed, \"f\")) {\n                return;\n            }\n            this._lightBulbWidget.getValue().update(actions, newState.trigger, newState.position);\n            if (newState.trigger.type === 1 /* Invoke */) {\n                if ((_b = newState.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) { // Triggered for specific scope\n                    // Check to see if we want to auto apply.\n                    const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\n                    if (validActionToApply) {\n                        try {\n                            this._lightBulbWidget.getValue().hide();\n                            yield this.delegate.applyCodeAction(validActionToApply, false);\n                        }\n                        finally {\n                            actions.dispose();\n                        }\n                        return;\n                    }\n                    // Check to see if there is an action that we would have applied were it not invalid\n                    if (newState.trigger.context) {\n                        const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\n                        if (invalidAction && invalidAction.action.disabled) {\n                            (_c = MessageController.get(this._editor)) === null || _c === void 0 ? void 0 : _c.showMessage(invalidAction.action.disabled, newState.trigger.context.position);\n                            actions.dispose();\n                            return;\n                        }\n                    }\n                }\n                const includeDisabledActions = !!((_d = newState.trigger.filter) === null || _d === void 0 ? void 0 : _d.include);\n                if (newState.trigger.context) {\n                    if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\n                        (_e = MessageController.get(this._editor)) === null || _e === void 0 ? void 0 : _e.showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\n                        this._activeCodeActions.value = actions;\n                        actions.dispose();\n                        return;\n                    }\n                }\n                this._activeCodeActions.value = actions;\n                this._codeActionWidget.getValue().show(newState.trigger, actions, newState.position, { includeDisabledActions });\n            }\n            else {\n                // auto magically triggered\n                if (this._codeActionWidget.getValue().isVisible) {\n                    // TODO: Figure out if we should update the showing menu?\n                    actions.dispose();\n                }\n                else {\n                    this._activeCodeActions.value = actions;\n                }\n            }\n        });\n    }\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\n        if (!actions.allActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length === 0)\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.allActions.length === 1)) {\n            return actions.allActions.find(({ action }) => action.disabled);\n        }\n        return undefined;\n    }\n    tryGetValidActionToApply(trigger, actions) {\n        if (!actions.validActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length > 0)\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.validActions.length === 1)) {\n            return actions.validActions[0];\n        }\n        return undefined;\n    }\n    showCodeActionList(trigger, actions, at, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._codeActionWidget.getValue().show(trigger, actions, at, options);\n        });\n    }\n};\n_CodeActionUi_disposed = new WeakMap();\nCodeActionUi = __decorate([\n    __param(4, IInstantiationService)\n], CodeActionUi);\nexport { CodeActionUi };\n",
      "start": 1711096856610,
      "end": 1711096856690,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856690,
      "end": 1711096856690,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856691,
      "end": 1711096856691,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856691,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856692,
      "end": 1711096856692,
      "order": "normal"
    }
  ]
}
