{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/viewEventHandler.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../base/common/lifecycle.js';\nexport class ViewEventHandler extends Disposable {\n    constructor() {\n        super();\n        this._shouldRender = true;\n    }\n    shouldRender() {\n        return this._shouldRender;\n    }\n    forceShouldRender() {\n        this._shouldRender = true;\n    }\n    setShouldRender() {\n        this._shouldRender = true;\n    }\n    onDidRender() {\n        this._shouldRender = false;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        return false;\n    }\n    onCompositionEnd(e) {\n        return false;\n    }\n    onConfigurationChanged(e) {\n        return false;\n    }\n    onCursorStateChanged(e) {\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return false;\n    }\n    onFlushed(e) {\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    onLanguageConfigurationChanged(e) {\n        return false;\n    }\n    onLineMappingChanged(e) {\n        return false;\n    }\n    onLinesChanged(e) {\n        return false;\n    }\n    onLinesDeleted(e) {\n        return false;\n    }\n    onLinesInserted(e) {\n        return false;\n    }\n    onRevealRangeRequest(e) {\n        return false;\n    }\n    onScrollChanged(e) {\n        return false;\n    }\n    onThemeChanged(e) {\n        return false;\n    }\n    onTokensChanged(e) {\n        return false;\n    }\n    onTokensColorsChanged(e) {\n        return false;\n    }\n    onZonesChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    handleEvents(events) {\n        let shouldRender = false;\n        for (let i = 0, len = events.length; i < len; i++) {\n            const e = events[i];\n            switch (e.type) {\n                case 0 /* ViewCompositionStart */:\n                    if (this.onCompositionStart(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 1 /* ViewCompositionEnd */:\n                    if (this.onCompositionEnd(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 2 /* ViewConfigurationChanged */:\n                    if (this.onConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 3 /* ViewCursorStateChanged */:\n                    if (this.onCursorStateChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 4 /* ViewDecorationsChanged */:\n                    if (this.onDecorationsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 5 /* ViewFlushed */:\n                    if (this.onFlushed(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 6 /* ViewFocusChanged */:\n                    if (this.onFocusChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 7 /* ViewLanguageConfigurationChanged */:\n                    if (this.onLanguageConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 8 /* ViewLineMappingChanged */:\n                    if (this.onLineMappingChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 9 /* ViewLinesChanged */:\n                    if (this.onLinesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 10 /* ViewLinesDeleted */:\n                    if (this.onLinesDeleted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 11 /* ViewLinesInserted */:\n                    if (this.onLinesInserted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 12 /* ViewRevealRangeRequest */:\n                    if (this.onRevealRangeRequest(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 13 /* ViewScrollChanged */:\n                    if (this.onScrollChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 15 /* ViewTokensChanged */:\n                    if (this.onTokensChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 14 /* ViewThemeChanged */:\n                    if (this.onThemeChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 16 /* ViewTokensColorsChanged */:\n                    if (this.onTokensColorsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 17 /* ViewZonesChanged */:\n                    if (this.onZonesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                default:\n                    console.info('View received unknown event: ');\n                    console.info(e);\n            }\n        }\n        if (shouldRender) {\n            this._shouldRender = true;\n        }\n    }\n}\n",
      "start": 1711096856443,
      "end": 1711096856524,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856524,
      "end": 1711096856524,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856524,
      "end": 1711096856524,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856525,
      "end": 1711096856525,
      "order": "normal"
    }
  ]
}
