{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/common/search.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n",
      "start": 1711096857311,
      "end": 1711096857387,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857387,
      "end": 1711096857387,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857387,
      "end": 1711096857387,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857387,
      "end": 1711096857387,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857387,
      "end": 1711096857387,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857387,
      "end": 1711096857387,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857388,
      "end": 1711096857388,
      "order": "normal"
    }
  ]
}
