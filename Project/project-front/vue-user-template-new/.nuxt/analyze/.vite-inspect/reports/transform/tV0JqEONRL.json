{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport * as objects from '../../../common/objects.js';\n/**\n * A widget which can render a label with substring highlights, often\n * originating from a filter function like the fuzzy matcher.\n */\nexport class HighlightedLabel {\n    /**\n     * Create a new {@link HighlightedLabel}.\n     *\n     * @param container The parent container to append to.\n     */\n    constructor(container, options) {\n        var _a;\n        this.text = '';\n        this.title = '';\n        this.highlights = [];\n        this.didEverRender = false;\n        this.supportIcons = (_a = options === null || options === void 0 ? void 0 : options.supportIcons) !== null && _a !== void 0 ? _a : false;\n        this.domNode = dom.append(container, dom.$('span.monaco-highlighted-label'));\n    }\n    /**\n     * The label's DOM node.\n     */\n    get element() {\n        return this.domNode;\n    }\n    /**\n     * Set the label and highlights.\n     *\n     * @param text The label to display.\n     * @param highlights The ranges to highlight.\n     * @param title An optional title for the hover tooltip.\n     * @param escapeNewLines Whether to escape new lines.\n     * @returns\n     */\n    set(text, highlights = [], title = '', escapeNewLines) {\n        if (!text) {\n            text = '';\n        }\n        if (escapeNewLines) {\n            // adjusts highlights inplace\n            text = HighlightedLabel.escapeNewLines(text, highlights);\n        }\n        if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n            return;\n        }\n        this.text = text;\n        this.title = title;\n        this.highlights = highlights;\n        this.render();\n    }\n    render() {\n        const children = [];\n        let pos = 0;\n        for (const highlight of this.highlights) {\n            if (highlight.end === highlight.start) {\n                continue;\n            }\n            if (pos < highlight.start) {\n                const substring = this.text.substring(pos, highlight.start);\n                children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n                pos = highlight.end;\n            }\n            const substring = this.text.substring(highlight.start, highlight.end);\n            const element = dom.$('span.highlight', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]);\n            if (highlight.extraClasses) {\n                element.classList.add(...highlight.extraClasses);\n            }\n            children.push(element);\n            pos = highlight.end;\n        }\n        if (pos < this.text.length) {\n            const substring = this.text.substring(pos);\n            children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n        }\n        dom.reset(this.domNode, ...children);\n        if (this.title) {\n            this.domNode.title = this.title;\n        }\n        else {\n            this.domNode.removeAttribute('title');\n        }\n        this.didEverRender = true;\n    }\n    static escapeNewLines(text, highlights) {\n        let total = 0;\n        let extra = 0;\n        return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\n            extra = match === '\\r\\n' ? -1 : 0;\n            offset += total;\n            for (const highlight of highlights) {\n                if (highlight.end <= offset) {\n                    continue;\n                }\n                if (highlight.start >= offset) {\n                    highlight.start += extra;\n                }\n                if (highlight.end >= offset) {\n                    highlight.end += extra;\n                }\n            }\n            total += extra;\n            return '\\u23CE';\n        });\n    }\n}\n",
      "start": 1711096857473,
      "end": 1711096857584,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857584,
      "end": 1711096857584,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857584,
      "end": 1711096857585,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857585,
      "end": 1711096857585,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857585,
      "end": 1711096857585,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857585,
      "end": 1711096857585,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857585,
      "end": 1711096857585,
      "order": "normal"
    }
  ]
}
