{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/browser/anchorSelect.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = class SelectionAnchorController {\n    constructor(editor, contextKeyService) {\n        this.editor = editor;\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n    }\n    static get(editor) {\n        return editor.getContribution(SelectionAnchorController.ID);\n    }\n    setSelectionAnchor() {\n        if (this.editor.hasModel()) {\n            const position = this.editor.getPosition();\n            const previousDecorations = this.decorationId ? [this.decorationId] : [];\n            const newDecorationId = this.editor.deltaDecorations(previousDecorations, [{\n                    range: Selection.fromPositions(position, position),\n                    options: {\n                        description: 'selection-anchor',\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n                        hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n                        className: 'selection-anchor'\n                    }\n                }]);\n            this.decorationId = newDecorationId[0];\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n        }\n    }\n    goToSelectionAnchor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (anchorPosition) {\n                this.editor.setPosition(anchorPosition.getStartPosition());\n            }\n        }\n    }\n    selectFromAnchorToCursor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (start) {\n                const end = this.editor.getPosition();\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n                this.cancelSelectionAnchor();\n            }\n        }\n    }\n    cancelSelectionAnchor() {\n        if (this.decorationId) {\n            this.editor.deltaDecorations([this.decorationId], []);\n            this.decorationId = undefined;\n            this.selectionAnchorSetContextKey.set(false);\n        }\n    }\n    dispose() {\n        this.cancelSelectionAnchor();\n        this.modelChangeListener.dispose();\n    }\n};\nSelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';\nSelectionAnchorController = __decorate([\n    __param(1, IContextKeyService)\n], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.setSelectionAnchor',\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n            alias: 'Set Selection Anchor',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 2048 /* CtrlCmd */ | 32 /* KeyB */),\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.setSelectionAnchor();\n        });\n    }\n}\nclass GoToSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToSelectionAnchor',\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n            alias: 'Go to Selection Anchor',\n            precondition: SelectionAnchorSet,\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.goToSelectionAnchor();\n        });\n    }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectFromAnchorToCursor',\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n            alias: 'Select from Anchor to Cursor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 2048 /* CtrlCmd */ | 41 /* KeyK */),\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.selectFromAnchorToCursor();\n        });\n    }\n}\nclass CancelSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.cancelSelectionAnchor',\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n            alias: 'Cancel Selection Anchor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 9 /* Escape */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.cancelSelectionAnchor();\n        });\n    }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);\n",
      "start": 1711096854388,
      "end": 1711096854468,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854468,
      "end": 1711096854468,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854469,
      "end": 1711096854469,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854469,
      "end": 1711096854469,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854469,
      "end": 1711096854469,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854469,
      "end": 1711096854469,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854469,
      "end": 1711096854469,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854469,
      "end": 1711096854470,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854470,
      "end": 1711096854470,
      "order": "normal"
    }
  ]
}
