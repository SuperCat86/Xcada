{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetRenderer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport { isSafari } from '../../../../base/browser/browser.js';\nimport { $, append, hide, show } from '../../../../base/browser/dom.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { flatten } from '../../../../base/common/arrays.js';\nimport { Codicon, CSSIcon } from '../../../../base/common/codicons.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { createMatches } from '../../../../base/common/filters.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { getIconClasses } from '../../../common/services/getIconClasses.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport * as nls from '../../../../nls.js';\nimport { FileKind } from '../../../../platform/files/common/files.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IThemeService, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\nexport function getAriaId(index) {\n    return `suggest-aria-id:${index}`;\n}\nexport const suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\nconst _completionItemColor = new (_a = class ColorExtractor {\n        extract(item, out) {\n            if (item.textLabel.match(ColorExtractor._regexStrict)) {\n                out[0] = item.textLabel;\n                return true;\n            }\n            if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {\n                out[0] = item.completion.detail;\n                return true;\n            }\n            if (typeof item.completion.documentation === 'string') {\n                const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\n                    out[0] = match[0];\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\n    _a);\nlet ItemRenderer = class ItemRenderer {\n    constructor(_editor, _modelService, _languageService, _themeService) {\n        this._editor = _editor;\n        this._modelService = _modelService;\n        this._languageService = _languageService;\n        this._themeService = _themeService;\n        this._onDidToggleDetails = new Emitter();\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\n        this.templateId = 'suggestion';\n    }\n    dispose() {\n        this._onDidToggleDetails.dispose();\n    }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.disposables = new DisposableStore();\n        data.root = container;\n        data.root.classList.add('show-file-icons');\n        data.icon = append(container, $('.icon'));\n        data.colorspan = append(data.icon, $('span.colorspan'));\n        const text = append(container, $('.contents'));\n        const main = append(text, $('.main'));\n        data.iconContainer = append(main, $('.icon-label.codicon'));\n        data.left = append(main, $('span.left'));\n        data.right = append(main, $('span.right'));\n        data.iconLabel = new IconLabel(data.left, { supportHighlights: true, supportIcons: true });\n        data.disposables.add(data.iconLabel);\n        data.parametersLabel = append(data.left, $('span.signature-label'));\n        data.qualifierLabel = append(data.left, $('span.qualifier-label'));\n        data.detailsLabel = append(data.right, $('span.details-label'));\n        data.readMore = append(data.right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\n        data.readMore.title = nls.localize('readMore', \"Read More\");\n        const configureFont = () => {\n            const options = this._editor.getOptions();\n            const fontInfo = options.get(44 /* fontInfo */);\n            const fontFamily = fontInfo.getMassagedFontFamily(isSafari ? EDITOR_FONT_DEFAULTS.fontFamily : null);\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\n            const fontSize = options.get(107 /* suggestFontSize */) || fontInfo.fontSize;\n            const lineHeight = options.get(108 /* suggestLineHeight */) || fontInfo.lineHeight;\n            const fontWeight = fontInfo.fontWeight;\n            const fontSizePx = `${fontSize}px`;\n            const lineHeightPx = `${lineHeight}px`;\n            data.root.style.fontSize = fontSizePx;\n            data.root.style.fontWeight = fontWeight;\n            main.style.fontFamily = fontFamily;\n            main.style.fontFeatureSettings = fontFeatureSettings;\n            main.style.lineHeight = lineHeightPx;\n            data.icon.style.height = lineHeightPx;\n            data.icon.style.width = lineHeightPx;\n            data.readMore.style.height = lineHeightPx;\n            data.readMore.style.width = lineHeightPx;\n        };\n        configureFont();\n        data.disposables.add(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(44 /* fontInfo */) || e.hasChanged(107 /* suggestFontSize */) || e.hasChanged(108 /* suggestLineHeight */)) {\n                configureFont();\n            }\n        }));\n        return data;\n    }\n    renderElement(element, index, data) {\n        const { completion } = element;\n        data.root.id = getAriaId(index);\n        data.colorspan.style.backgroundColor = '';\n        const labelOptions = {\n            labelEscapeNewLines: true,\n            matches: createMatches(element.score)\n        };\n        let color = [];\n        if (completion.kind === 19 /* Color */ && _completionItemColor.extract(element, color)) {\n            // special logic for 'color' completion items\n            data.icon.className = 'icon customcolor';\n            data.iconContainer.className = 'icon hide';\n            data.colorspan.style.backgroundColor = color[0];\n        }\n        else if (completion.kind === 20 /* File */ && this._themeService.getFileIconTheme().hasFileIcons) {\n            // special logic for 'file' completion items\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = 'icon hide';\n            const labelClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\n            const detailClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\n        }\n        else if (completion.kind === 23 /* Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\n            // special logic for 'folder' completion items\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = 'icon hide';\n            labelOptions.extraClasses = flatten([\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\n            ]);\n        }\n        else {\n            // normal icon\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = '';\n            data.iconContainer.classList.add('suggest-icon', ...CSSIcon.asClassNameArray(CompletionItemKinds.toIcon(completion.kind)));\n        }\n        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */) >= 0) {\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\n            labelOptions.matches = [];\n        }\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\n        if (typeof completion.label === 'string') {\n            data.parametersLabel.textContent = '';\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\n            data.root.classList.add('string-label');\n        }\n        else {\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\n            data.root.classList.remove('string-label');\n        }\n        if (this._editor.getOption(106 /* suggest */).showInlineDetails) {\n            show(data.detailsLabel);\n        }\n        else {\n            hide(data.detailsLabel);\n        }\n        if (canExpandCompletionItem(element)) {\n            data.right.classList.add('can-expand-details');\n            show(data.readMore);\n            data.readMore.onmousedown = e => {\n                e.stopPropagation();\n                e.preventDefault();\n            };\n            data.readMore.onclick = e => {\n                e.stopPropagation();\n                e.preventDefault();\n                this._onDidToggleDetails.fire();\n            };\n        }\n        else {\n            data.right.classList.remove('can-expand-details');\n            hide(data.readMore);\n            data.readMore.onmousedown = null;\n            data.readMore.onclick = null;\n        }\n    }\n    disposeTemplate(templateData) {\n        templateData.disposables.dispose();\n    }\n};\nItemRenderer = __decorate([\n    __param(1, IModelService),\n    __param(2, ILanguageService),\n    __param(3, IThemeService)\n], ItemRenderer);\nexport { ItemRenderer };\nfunction stripNewLines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\n}\n",
      "start": 1711096856878,
      "end": 1711096857003,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857003,
      "end": 1711096857003,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857003,
      "end": 1711096857003,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857003,
      "end": 1711096857003,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857004,
      "end": 1711096857004,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857004,
      "end": 1711096857005,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857005,
      "end": 1711096857005,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857006,
      "end": 1711096857006,
      "order": "normal"
    }
  ]
}
