{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/common/languages/supports.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createScopedLineTokens(context, offset) {\n    const tokenCount = context.getCount();\n    const tokenIndex = context.findTokenIndexAtOffset(offset);\n    const desiredLanguageId = context.getLanguageId(tokenIndex);\n    let lastTokenIndex = tokenIndex;\n    while (lastTokenIndex + 1 < tokenCount && context.getLanguageId(lastTokenIndex + 1) === desiredLanguageId) {\n        lastTokenIndex++;\n    }\n    let firstTokenIndex = tokenIndex;\n    while (firstTokenIndex > 0 && context.getLanguageId(firstTokenIndex - 1) === desiredLanguageId) {\n        firstTokenIndex--;\n    }\n    return new ScopedLineTokens(context, desiredLanguageId, firstTokenIndex, lastTokenIndex + 1, context.getStartOffset(firstTokenIndex), context.getEndOffset(lastTokenIndex));\n}\nexport class ScopedLineTokens {\n    constructor(actual, languageId, firstTokenIndex, lastTokenIndex, firstCharOffset, lastCharOffset) {\n        this._scopedLineTokensBrand = undefined;\n        this._actual = actual;\n        this.languageId = languageId;\n        this._firstTokenIndex = firstTokenIndex;\n        this._lastTokenIndex = lastTokenIndex;\n        this.firstCharOffset = firstCharOffset;\n        this._lastCharOffset = lastCharOffset;\n    }\n    getLineContent() {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(this.firstCharOffset, this._lastCharOffset);\n    }\n    getActualLineContentBefore(offset) {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(0, this.firstCharOffset + offset);\n    }\n    getTokenCount() {\n        return this._lastTokenIndex - this._firstTokenIndex;\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._actual.findTokenIndexAtOffset(offset + this.firstCharOffset) - this._firstTokenIndex;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._actual.getStandardTokenType(tokenIndex + this._firstTokenIndex);\n    }\n}\nexport function ignoreBracketsInToken(standardTokenType) {\n    return (standardTokenType & 3 /* value */) !== 0;\n}\n",
      "start": 1711096856181,
      "end": 1711096856270,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096856270,
      "end": 1711096856270,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096856270,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096856271,
      "end": 1711096856271,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096856271,
      "end": 1711096856272,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096856272,
      "end": 1711096856272,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096856272,
      "end": 1711096856272,
      "order": "normal"
    }
  ]
}
