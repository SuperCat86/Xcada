{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport * as nls from '../../../../nls.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\nfunction writeIgnoreState(codeEditorService, model, state) {\n    codeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\n}\nfunction readIgnoreState(codeEditorService, model) {\n    return codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\n}\nlet UnusualLineTerminatorsDetector = class UnusualLineTerminatorsDetector extends Disposable {\n    constructor(_editor, _dialogService, _codeEditorService) {\n        super();\n        this._editor = _editor;\n        this._dialogService = _dialogService;\n        this._codeEditorService = _codeEditorService;\n        this._config = this._editor.getOption(114 /* unusualLineTerminators */);\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(114 /* unusualLineTerminators */)) {\n                this._config = this._editor.getOption(114 /* unusualLineTerminators */);\n                this._checkForUnusualLineTerminators();\n            }\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            this._checkForUnusualLineTerminators();\n        }));\n        this._register(this._editor.onDidChangeModelContent((e) => {\n            if (e.isUndoing) {\n                // skip checking in case of undoing\n                return;\n            }\n            this._checkForUnusualLineTerminators();\n        }));\n    }\n    _checkForUnusualLineTerminators() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._config === 'off') {\n                return;\n            }\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            const model = this._editor.getModel();\n            if (!model.mightContainUnusualLineTerminators()) {\n                return;\n            }\n            const ignoreState = readIgnoreState(this._codeEditorService, model);\n            if (ignoreState === true) {\n                // this model should be ignored\n                return;\n            }\n            if (this._editor.getOption(81 /* readOnly */)) {\n                // read only editor => sorry!\n                return;\n            }\n            if (this._config === 'auto') {\n                // just do it!\n                model.removeUnusualLineTerminators(this._editor.getSelections());\n                return;\n            }\n            const result = yield this._dialogService.confirm({\n                title: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\n                message: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\n                detail: nls.localize('unusualLineTerminators.detail', \"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\", basename(model.uri)),\n                primaryButton: nls.localize('unusualLineTerminators.fix', \"Remove Unusual Line Terminators\"),\n                secondaryButton: nls.localize('unusualLineTerminators.ignore', \"Ignore\")\n            });\n            if (!result.confirmed) {\n                // this model should be ignored\n                writeIgnoreState(this._codeEditorService, model, true);\n                return;\n            }\n            model.removeUnusualLineTerminators(this._editor.getSelections());\n        });\n    }\n};\nUnusualLineTerminatorsDetector.ID = 'editor.contrib.unusualLineTerminatorsDetector';\nUnusualLineTerminatorsDetector = __decorate([\n    __param(1, IDialogService),\n    __param(2, ICodeEditorService)\n], UnusualLineTerminatorsDetector);\nexport { UnusualLineTerminatorsDetector };\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector);\n",
      "start": 1711096854599,
      "end": 1711096854797,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854797,
      "end": 1711096854797,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854798,
      "end": 1711096854798,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854798,
      "end": 1711096854799,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854799,
      "end": 1711096854799,
      "order": "normal"
    }
  ]
}
