{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/platform/instantiation/common/graph.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Node {\n    constructor(data) {\n        this.incoming = new Map();\n        this.outgoing = new Map();\n        this.data = data;\n    }\n}\nexport class Graph {\n    constructor(_hashFn) {\n        this._hashFn = _hashFn;\n        this._nodes = new Map();\n        // empty\n    }\n    roots() {\n        const ret = [];\n        for (let node of this._nodes.values()) {\n            if (node.outgoing.size === 0) {\n                ret.push(node);\n            }\n        }\n        return ret;\n    }\n    insertEdge(from, to) {\n        const fromNode = this.lookupOrInsertNode(from);\n        const toNode = this.lookupOrInsertNode(to);\n        fromNode.outgoing.set(this._hashFn(to), toNode);\n        toNode.incoming.set(this._hashFn(from), fromNode);\n    }\n    removeNode(data) {\n        const key = this._hashFn(data);\n        this._nodes.delete(key);\n        for (let node of this._nodes.values()) {\n            node.outgoing.delete(key);\n            node.incoming.delete(key);\n        }\n    }\n    lookupOrInsertNode(data) {\n        const key = this._hashFn(data);\n        let node = this._nodes.get(key);\n        if (!node) {\n            node = new Node(data);\n            this._nodes.set(key, node);\n        }\n        return node;\n    }\n    isEmpty() {\n        return this._nodes.size === 0;\n    }\n    toString() {\n        let data = [];\n        for (let [key, value] of this._nodes) {\n            data.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n        }\n        return data.join('\\n');\n    }\n    /**\n     * This is brute force and slow and **only** be used\n     * to trouble shoot.\n     */\n    findCycleSlow() {\n        for (let [id, node] of this._nodes) {\n            const seen = new Set([id]);\n            const res = this._findCycle(node, seen);\n            if (res) {\n                return res;\n            }\n        }\n        return undefined;\n    }\n    _findCycle(node, seen) {\n        for (let [id, outgoing] of node.outgoing) {\n            if (seen.has(id)) {\n                return [...seen, id].join(' -> ');\n            }\n            seen.add(id);\n            const value = this._findCycle(outgoing, seen);\n            if (value) {\n                return value;\n            }\n            seen.delete(id);\n        }\n        return undefined;\n    }\n}\n",
      "start": 1711096857087,
      "end": 1711096857179,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096857179,
      "end": 1711096857179,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096857179,
      "end": 1711096857179,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096857179,
      "end": 1711096857179,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096857179,
      "end": 1711096857179,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096857179,
      "end": 1711096857179,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096857180,
      "end": 1711096857180,
      "order": "normal"
    }
  ]
}
