{
  "resolvedId": "D:/Project/Project/project-front/vue-user-template-new/node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/browser/cursorUndo.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass CursorState {\n    constructor(selections) {\n        this.selections = selections;\n    }\n    equals(other) {\n        const thisLen = this.selections.length;\n        const otherLen = other.selections.length;\n        if (thisLen !== otherLen) {\n            return false;\n        }\n        for (let i = 0; i < thisLen; i++) {\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nclass StackElement {\n    constructor(cursorState, scrollTop, scrollLeft) {\n        this.cursorState = cursorState;\n        this.scrollTop = scrollTop;\n        this.scrollLeft = scrollLeft;\n    }\n}\nexport class CursorUndoRedoController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._isCursorUndoRedo = false;\n        this._undoStack = [];\n        this._redoStack = [];\n        this._register(editor.onDidChangeModel((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeCursorSelection((e) => {\n            if (this._isCursorUndoRedo) {\n                return;\n            }\n            if (!e.oldSelections) {\n                return;\n            }\n            if (e.oldModelVersionId !== e.modelVersionId) {\n                return;\n            }\n            const prevState = new CursorState(e.oldSelections);\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\n            if (!isEqualToLastUndoStack) {\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\n                this._redoStack = [];\n                if (this._undoStack.length > 50) {\n                    // keep the cursor undo stack bounded\n                    this._undoStack.shift();\n                }\n            }\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(CursorUndoRedoController.ID);\n    }\n    cursorUndo() {\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\n            return;\n        }\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._undoStack.pop());\n    }\n    cursorRedo() {\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\n            return;\n        }\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._redoStack.pop());\n    }\n    _applyState(stackElement) {\n        this._isCursorUndoRedo = true;\n        this._editor.setSelections(stackElement.cursorState.selections);\n        this._editor.setScrollPosition({\n            scrollTop: stackElement.scrollTop,\n            scrollLeft: stackElement.scrollLeft\n        });\n        this._isCursorUndoRedo = false;\n    }\n}\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\nexport class CursorUndo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorUndo',\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\n            alias: 'Cursor Undo',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 51 /* KeyU */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorUndo();\n    }\n}\nexport class CursorRedo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorRedo',\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\n            alias: 'Cursor Redo',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorRedo();\n    }\n}\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);\n",
      "start": 1711096854404,
      "end": 1711096854506,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711096854506,
      "end": 1711096854506,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711096854506,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711096854507,
      "end": 1711096854507,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711096854507,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711096854508,
      "end": 1711096854508,
      "order": "normal"
    }
  ]
}
